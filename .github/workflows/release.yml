name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:  # Enables manual trigger from GitHub UI
    inputs:
      version_tag:
        description: 'Version tag to release (e.g., v0.1.0). Leave empty to use current HEAD.'
        required: false
        type: string

permissions:
  contents: write
  id-token: write  # Required for PyPI Trusted Publishers

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release  # Links to GitHub environment for protection rules

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ inputs.version_tag || github.ref }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Build package
      run: |
        uv build

    - name: Verify package
      run: |
        uv run python -m pip install twine
        uv run twine check dist/*

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  # Optional: Create a Docker image
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #
  #   - name: Extract version from tag
  #     id: version
  #     run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
  #
  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: .
  #       push: true
  #       tags: |
  #         yourusername/git-branch-keeper:latest
  #         yourusername/git-branch-keeper:${{ steps.version.outputs.VERSION }}
