name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Check code formatting with Black
      run: |
        uv run black --check .

    - name: Lint with Ruff
      run: |
        uv run ruff check .

    - name: Type check with MyPy
      run: |
        uv run mypy git_branch_keeper --ignore-missing-imports
      continue-on-error: true  # Don't fail CI on type errors yet

    - name: Check imports with isort
      run: |
        uv run python -c "import sys; sys.exit(0)"  # Placeholder for future isort check
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for git operations

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Run basic smoke tests
      run: |
        # Test version output
        uv run git-branch-keeper --version

        # Test help output
        uv run git-branch-keeper --help

        # Test in current repo (non-interactive, dry-run)
        uv run git-branch-keeper --no-interactive --dry-run --filter all
      continue-on-error: true  # Don't fail until proper tests are added

    # Uncomment when tests are added
    # - name: Run pytest
    #   run: |
    #     uv run pytest --cov=git_branch_keeper --cov-report=xml --cov-report=term

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     file: ./coverage.xml
    #     fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Build package
      run: |
        uv build

    - name: Check package
      run: |
        uv run python -m pip install twine
        uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
